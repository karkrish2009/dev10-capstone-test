{"ast":null,"code":"import { parse } from './fromTransformAttribute.autogenerated';\n\n/**\r\n * Parser for SVG Trasform Attribute http://www.w3.org/TR/SVG/coords.html#TransformAttribute <br/>\r\n * Warning: This should be considered BETA until it is released a stable version of pegjs.\r\n * @param transformString {string} Transform string as defined by w3 Consortium\r\n * @returns {MatrixDescriptor[]} Array of MatrixDescriptor\r\n *\r\n * @example\r\n * > fromTransformAttribute('translate(-10,-10) scale(2,2) translate(10,10)')\r\n * [\r\n *  { type: 'translate', tx: -10, ty: -10},\r\n *  { type: 'scale', sx: 2, sy: 2 },\r\n *  { type: 'translate', tx: 10, ty: 10}\r\n * ]\r\n *\r\n * > compose(fromDefinition(fromTransformAttribute('translate(-10, -10) scale(10, 10)')))\r\n * { a: 10, c: 0, e: -10, b: 0, d: 10, f: -10 }\r\n */\nexport function fromTransformAttribute(transformString) {\n  return parse(transformString);\n}","map":{"version":3,"names":["parse","fromTransformAttribute","transformString"],"sources":["C:/Users/karkr/Documents/classes/dev10/dev10-capstone/dev10-capstone-test/frontend/node_modules/transformation-matrix/src/fromTransformAttribute.js"],"sourcesContent":["import { parse } from './fromTransformAttribute.autogenerated'\r\n\r\n/**\r\n * Parser for SVG Trasform Attribute http://www.w3.org/TR/SVG/coords.html#TransformAttribute <br/>\r\n * Warning: This should be considered BETA until it is released a stable version of pegjs.\r\n * @param transformString {string} Transform string as defined by w3 Consortium\r\n * @returns {MatrixDescriptor[]} Array of MatrixDescriptor\r\n *\r\n * @example\r\n * > fromTransformAttribute('translate(-10,-10) scale(2,2) translate(10,10)')\r\n * [\r\n *  { type: 'translate', tx: -10, ty: -10},\r\n *  { type: 'scale', sx: 2, sy: 2 },\r\n *  { type: 'translate', tx: 10, ty: 10}\r\n * ]\r\n *\r\n * > compose(fromDefinition(fromTransformAttribute('translate(-10, -10) scale(10, 10)')))\r\n * { a: 10, c: 0, e: -10, b: 0, d: 10, f: -10 }\r\n */\r\nexport function fromTransformAttribute (transformString) {\r\n  return parse(transformString)\r\n}\r\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,wCAAwC;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,sBAAsBA,CAAEC,eAAe,EAAE;EACvD,OAAOF,KAAK,CAACE,eAAe,CAAC;AAC/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}