{"ast":null,"code":"// Generated by Peggy 3.0.0.\n//\n// https://peggyjs.org/\n\nfunction peg$subclass(child, parent) {\n  function C() {\n    this.constructor = child;\n  }\n  C.prototype = parent.prototype;\n  child.prototype = new C();\n}\nfunction peg$SyntaxError(message, expected, found, location) {\n  var self = Error.call(this, message);\n  // istanbul ignore next Check is a necessary evil to support older environments\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(self, peg$SyntaxError.prototype);\n  }\n  self.expected = expected;\n  self.found = found;\n  self.location = location;\n  self.name = \"SyntaxError\";\n  return self;\n}\npeg$subclass(peg$SyntaxError, Error);\nfunction peg$padEnd(str, targetLength, padString) {\n  padString = padString || \" \";\n  if (str.length > targetLength) {\n    return str;\n  }\n  targetLength -= str.length;\n  padString += padString.repeat(targetLength);\n  return str + padString.slice(0, targetLength);\n}\npeg$SyntaxError.prototype.format = function (sources) {\n  var str = \"Error: \" + this.message;\n  if (this.location) {\n    var src = null;\n    var k;\n    for (k = 0; k < sources.length; k++) {\n      if (sources[k].source === this.location.source) {\n        src = sources[k].text.split(/\\r\\n|\\n|\\r/g);\n        break;\n      }\n    }\n    var s = this.location.start;\n    var offset_s = this.location.source && typeof this.location.source.offset === \"function\" ? this.location.source.offset(s) : s;\n    var loc = this.location.source + \":\" + offset_s.line + \":\" + offset_s.column;\n    if (src) {\n      var e = this.location.end;\n      var filler = peg$padEnd(\"\", offset_s.line.toString().length, ' ');\n      var line = src[s.line - 1];\n      var last = s.line === e.line ? e.column : line.length + 1;\n      var hatLen = last - s.column || 1;\n      str += \"\\n --> \" + loc + \"\\n\" + filler + \" |\\n\" + offset_s.line + \" | \" + line + \"\\n\" + filler + \" | \" + peg$padEnd(\"\", s.column - 1, ' ') + peg$padEnd(\"\", hatLen, \"^\");\n    } else {\n      str += \"\\n at \" + loc;\n    }\n  }\n  return str;\n};\npeg$SyntaxError.buildMessage = function (expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n    literal: function (expectation) {\n      return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n    },\n    class: function (expectation) {\n      var escapedParts = expectation.parts.map(function (part) {\n        return Array.isArray(part) ? classEscape(part[0]) + \"-\" + classEscape(part[1]) : classEscape(part);\n      });\n      return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts.join(\"\") + \"]\";\n    },\n    any: function () {\n      return \"any character\";\n    },\n    end: function () {\n      return \"end of input\";\n    },\n    other: function (expectation) {\n      return expectation.description;\n    }\n  };\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n  function literalEscape(s) {\n    return s.replace(/\\\\/g, \"\\\\\\\\\").replace(/\"/g, \"\\\\\\\"\").replace(/\\0/g, \"\\\\0\").replace(/\\t/g, \"\\\\t\").replace(/\\n/g, \"\\\\n\").replace(/\\r/g, \"\\\\r\").replace(/[\\x00-\\x0F]/g, function (ch) {\n      return \"\\\\x0\" + hex(ch);\n    }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n      return \"\\\\x\" + hex(ch);\n    });\n  }\n  function classEscape(s) {\n    return s.replace(/\\\\/g, \"\\\\\\\\\").replace(/\\]/g, \"\\\\]\").replace(/\\^/g, \"\\\\^\").replace(/-/g, \"\\\\-\").replace(/\\0/g, \"\\\\0\").replace(/\\t/g, \"\\\\t\").replace(/\\n/g, \"\\\\n\").replace(/\\r/g, \"\\\\r\").replace(/[\\x00-\\x0F]/g, function (ch) {\n      return \"\\\\x0\" + hex(ch);\n    }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n      return \"\\\\x\" + hex(ch);\n    });\n  }\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n  function describeExpected(expected) {\n    var descriptions = expected.map(describeExpectation);\n    var i, j;\n    descriptions.sort();\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n      default:\n        return descriptions.slice(0, -1).join(\", \") + \", or \" + descriptions[descriptions.length - 1];\n    }\n  }\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\nfunction peg$parse(input, options) {\n  options = options !== undefined ? options : {};\n  var peg$FAILED = {};\n  var peg$source = options.grammarSource;\n  var peg$startRuleFunctions = {\n    transformList: peg$parsetransformList\n  };\n  var peg$startRuleFunction = peg$parsetransformList;\n  var peg$c0 = \"matrix\";\n  var peg$c1 = \"(\";\n  var peg$c2 = \")\";\n  var peg$c3 = \"translate\";\n  var peg$c4 = \"scale\";\n  var peg$c5 = \"rotate\";\n  var peg$c6 = \"skewX\";\n  var peg$c7 = \"skewY\";\n  var peg$c8 = \",\";\n  var peg$c9 = \".\";\n  var peg$r0 = /^[eE]/;\n  var peg$r1 = /^[+\\-]/;\n  var peg$r2 = /^[0-9]/;\n  var peg$r3 = /^[ \\t\\r\\n]/;\n  var peg$e0 = peg$literalExpectation(\"matrix\", false);\n  var peg$e1 = peg$literalExpectation(\"(\", false);\n  var peg$e2 = peg$literalExpectation(\")\", false);\n  var peg$e3 = peg$literalExpectation(\"translate\", false);\n  var peg$e4 = peg$literalExpectation(\"scale\", false);\n  var peg$e5 = peg$literalExpectation(\"rotate\", false);\n  var peg$e6 = peg$literalExpectation(\"skewX\", false);\n  var peg$e7 = peg$literalExpectation(\"skewY\", false);\n  var peg$e8 = peg$literalExpectation(\",\", false);\n  var peg$e9 = peg$otherExpectation(\"fractionalConstant\");\n  var peg$e10 = peg$literalExpectation(\".\", false);\n  var peg$e11 = peg$classExpectation([\"e\", \"E\"], false, false);\n  var peg$e12 = peg$classExpectation([\"+\", \"-\"], false, false);\n  var peg$e13 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n  var peg$e14 = peg$classExpectation([\" \", \"\\t\", \"\\r\", \"\\n\"], false, false);\n  var peg$f0 = function (ts) {\n    return ts;\n  };\n  var peg$f1 = function (t, ts) {\n    return t.concat(ts);\n  };\n  var peg$f2 = function (a, b, c, d, e, f) {\n    return [{\n      type: 'matrix',\n      a: a,\n      b: b,\n      c: c,\n      d: d,\n      e: e,\n      f: f\n    }];\n  };\n  var peg$f3 = function (tx, ty) {\n    var t = {\n      type: 'translate',\n      tx: tx\n    };\n    if (ty) t.ty = ty;\n    return [t];\n  };\n  var peg$f4 = function (sx, sy) {\n    var s = {\n      type: 'scale',\n      sx: sx\n    };\n    if (sy) s.sy = sy;\n    return [s];\n  };\n  var peg$f5 = function (angle, c) {\n    var r = {\n      type: 'rotate',\n      angle: angle\n    };\n    if (c) {\n      r.cx = c[0];\n      r.cy = c[1];\n    }\n    return [r];\n  };\n  var peg$f6 = function (angle) {\n    return [{\n      type: 'skewX',\n      angle: angle\n    }];\n  };\n  var peg$f7 = function (angle) {\n    return [{\n      type: 'skewY',\n      angle: angle\n    }];\n  };\n  var peg$f8 = function (f) {\n    return parseFloat(f.join(\"\"));\n  };\n  var peg$f9 = function (i) {\n    return parseInt(i.join(\"\"));\n  };\n  var peg$f10 = function (n) {\n    return n;\n  };\n  var peg$f11 = function (n1, n2) {\n    return [n1, n2];\n  };\n  var peg$f12 = function (ds) {\n    return ds.join(\"\");\n  };\n  var peg$f13 = function (f, e) {\n    return [f, e || null].join(\"\");\n  };\n  var peg$f14 = function (d, e) {\n    return [d, e].join(\"\");\n  };\n  var peg$f15 = function (d1, d2) {\n    return [d1 ? d1.join(\"\") : null, \".\", d2.join(\"\")].join(\"\");\n  };\n  var peg$f16 = function (d) {\n    return d.join(\"\");\n  };\n  var peg$f17 = function (s, d) {\n    return ['e', s, d.join(\"\")].join(\"\");\n  };\n  var peg$currPos = 0;\n  var peg$savedPos = 0;\n  var peg$posDetailsCache = [{\n    line: 1,\n    column: 1\n  }];\n  var peg$maxFailPos = 0;\n  var peg$maxFailExpected = [];\n  var peg$silentFails = 0;\n  var peg$result;\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n  function offset() {\n    return peg$savedPos;\n  }\n  function range() {\n    return {\n      source: peg$source,\n      start: peg$savedPos,\n      end: peg$currPos\n    };\n  }\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n  function expected(description, location) {\n    location = location !== undefined ? location : peg$computeLocation(peg$savedPos, peg$currPos);\n    throw peg$buildStructuredError([peg$otherExpectation(description)], input.substring(peg$savedPos, peg$currPos), location);\n  }\n  function error(message, location) {\n    location = location !== undefined ? location : peg$computeLocation(peg$savedPos, peg$currPos);\n    throw peg$buildSimpleError(message, location);\n  }\n  function peg$literalExpectation(text, ignoreCase) {\n    return {\n      type: \"literal\",\n      text: text,\n      ignoreCase: ignoreCase\n    };\n  }\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return {\n      type: \"class\",\n      parts: parts,\n      inverted: inverted,\n      ignoreCase: ignoreCase\n    };\n  }\n  function peg$anyExpectation() {\n    return {\n      type: \"any\"\n    };\n  }\n  function peg$endExpectation() {\n    return {\n      type: \"end\"\n    };\n  }\n  function peg$otherExpectation(description) {\n    return {\n      type: \"other\",\n      description: description\n    };\n  }\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos];\n    var p;\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n        p++;\n      }\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n  function peg$computeLocation(startPos, endPos, offset) {\n    var startPosDetails = peg$computePosDetails(startPos);\n    var endPosDetails = peg$computePosDetails(endPos);\n    var res = {\n      source: peg$source,\n      start: {\n        offset: startPos,\n        line: startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line: endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n    if (offset && peg$source && typeof peg$source.offset === \"function\") {\n      res.start = peg$source.offset(res.start);\n      res.end = peg$source.offset(res.end);\n    }\n    return res;\n  }\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) {\n      return;\n    }\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n    peg$maxFailExpected.push(expected);\n  }\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(peg$SyntaxError.buildMessage(expected, found), expected, found, location);\n  }\n  function peg$parsetransformList() {\n    var s0, s1, s2, s3, s4;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parsewsp();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parsewsp();\n    }\n    s2 = peg$parsetransforms();\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    s3 = [];\n    s4 = peg$parsewsp();\n    while (s4 !== peg$FAILED) {\n      s3.push(s4);\n      s4 = peg$parsewsp();\n    }\n    peg$savedPos = s0;\n    s0 = peg$f0(s2);\n    return s0;\n  }\n  function peg$parsetransforms() {\n    var s0, s1, s2, s3;\n    s0 = peg$currPos;\n    s1 = peg$parsetransform();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsecommaWsp();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsecommaWsp();\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsetransforms();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f1(s1, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsetransform();\n    }\n    return s0;\n  }\n  function peg$parsetransform() {\n    var s0;\n    s0 = peg$parsematrix();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsetranslate();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsescale();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parserotate();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseskewX();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseskewY();\n            }\n          }\n        }\n      }\n    }\n    return s0;\n  }\n  function peg$parsematrix() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17;\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c0) {\n      s1 = peg$c0;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e0);\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewsp();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewsp();\n      }\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e1);\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsewsp();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewsp();\n        }\n        s5 = peg$parsenumber();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsecommaWsp();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parsenumber();\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parsecommaWsp();\n              if (s8 !== peg$FAILED) {\n                s9 = peg$parsenumber();\n                if (s9 !== peg$FAILED) {\n                  s10 = peg$parsecommaWsp();\n                  if (s10 !== peg$FAILED) {\n                    s11 = peg$parsenumber();\n                    if (s11 !== peg$FAILED) {\n                      s12 = peg$parsecommaWsp();\n                      if (s12 !== peg$FAILED) {\n                        s13 = peg$parsenumber();\n                        if (s13 !== peg$FAILED) {\n                          s14 = peg$parsecommaWsp();\n                          if (s14 !== peg$FAILED) {\n                            s15 = peg$parsenumber();\n                            if (s15 !== peg$FAILED) {\n                              s16 = [];\n                              s17 = peg$parsewsp();\n                              while (s17 !== peg$FAILED) {\n                                s16.push(s17);\n                                s17 = peg$parsewsp();\n                              }\n                              if (input.charCodeAt(peg$currPos) === 41) {\n                                s17 = peg$c2;\n                                peg$currPos++;\n                              } else {\n                                s17 = peg$FAILED;\n                                if (peg$silentFails === 0) {\n                                  peg$fail(peg$e2);\n                                }\n                              }\n                              if (s17 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s0 = peg$f2(s5, s7, s9, s11, s13, s15);\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    return s0;\n  }\n  function peg$parsetranslate() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 9) === peg$c3) {\n      s1 = peg$c3;\n      peg$currPos += 9;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e3);\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewsp();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewsp();\n      }\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e1);\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsewsp();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewsp();\n        }\n        s5 = peg$parsenumber();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsecommaWspNumber();\n          if (s6 === peg$FAILED) {\n            s6 = null;\n          }\n          s7 = [];\n          s8 = peg$parsewsp();\n          while (s8 !== peg$FAILED) {\n            s7.push(s8);\n            s8 = peg$parsewsp();\n          }\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s8 = peg$c2;\n            peg$currPos++;\n          } else {\n            s8 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e2);\n            }\n          }\n          if (s8 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f3(s5, s6);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    return s0;\n  }\n  function peg$parsescale() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c4) {\n      s1 = peg$c4;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e4);\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewsp();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewsp();\n      }\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e1);\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsewsp();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewsp();\n        }\n        s5 = peg$parsenumber();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsecommaWspNumber();\n          if (s6 === peg$FAILED) {\n            s6 = null;\n          }\n          s7 = [];\n          s8 = peg$parsewsp();\n          while (s8 !== peg$FAILED) {\n            s7.push(s8);\n            s8 = peg$parsewsp();\n          }\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s8 = peg$c2;\n            peg$currPos++;\n          } else {\n            s8 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e2);\n            }\n          }\n          if (s8 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f4(s5, s6);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    return s0;\n  }\n  function peg$parserotate() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c5) {\n      s1 = peg$c5;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e5);\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewsp();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewsp();\n      }\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e1);\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsewsp();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewsp();\n        }\n        s5 = peg$parsenumber();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsecommaWspTwoNumbers();\n          if (s6 === peg$FAILED) {\n            s6 = null;\n          }\n          s7 = [];\n          s8 = peg$parsewsp();\n          while (s8 !== peg$FAILED) {\n            s7.push(s8);\n            s8 = peg$parsewsp();\n          }\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s8 = peg$c2;\n            peg$currPos++;\n          } else {\n            s8 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e2);\n            }\n          }\n          if (s8 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f5(s5, s6);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    return s0;\n  }\n  function peg$parseskewX() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c6) {\n      s1 = peg$c6;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e6);\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewsp();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewsp();\n      }\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e1);\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsewsp();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewsp();\n        }\n        s5 = peg$parsenumber();\n        if (s5 !== peg$FAILED) {\n          s6 = [];\n          s7 = peg$parsewsp();\n          while (s7 !== peg$FAILED) {\n            s6.push(s7);\n            s7 = peg$parsewsp();\n          }\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s7 = peg$c2;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e2);\n            }\n          }\n          if (s7 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f6(s5);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    return s0;\n  }\n  function peg$parseskewY() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c7) {\n      s1 = peg$c7;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e7);\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsewsp();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsewsp();\n      }\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c1;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e1);\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsewsp();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parsewsp();\n        }\n        s5 = peg$parsenumber();\n        if (s5 !== peg$FAILED) {\n          s6 = [];\n          s7 = peg$parsewsp();\n          while (s7 !== peg$FAILED) {\n            s6.push(s7);\n            s7 = peg$parsewsp();\n          }\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s7 = peg$c2;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e2);\n            }\n          }\n          if (s7 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f7(s5);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    return s0;\n  }\n  function peg$parsenumber() {\n    var s0, s1, s2, s3;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parsesign();\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    s3 = peg$parsefloatingPointConstant();\n    if (s3 !== peg$FAILED) {\n      s2 = [s2, s3];\n      s1 = s2;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f8(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$parsesign();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseintegerConstant();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$f9(s1);\n      }\n      s0 = s1;\n    }\n    return s0;\n  }\n  function peg$parsecommaWspNumber() {\n    var s0, s1, s2;\n    s0 = peg$currPos;\n    s1 = peg$parsecommaWsp();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenumber();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f10(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    return s0;\n  }\n  function peg$parsecommaWspTwoNumbers() {\n    var s0, s1, s2, s3, s4;\n    s0 = peg$currPos;\n    s1 = peg$parsecommaWsp();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenumber();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsecommaWsp();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsenumber();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f11(s2, s4);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    return s0;\n  }\n  function peg$parsecommaWsp() {\n    var s0, s1, s2, s3, s4;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parsewsp();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsewsp();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsecomma();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = [];\n      s4 = peg$parsewsp();\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = peg$parsewsp();\n      }\n      s1 = [s1, s2, s3];\n      s0 = s1;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsecomma();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parsewsp();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsewsp();\n        }\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n    return s0;\n  }\n  function peg$parsecomma() {\n    var s0;\n    if (input.charCodeAt(peg$currPos) === 44) {\n      s0 = peg$c8;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e8);\n      }\n    }\n    return s0;\n  }\n  function peg$parseintegerConstant() {\n    var s0, s1;\n    s0 = peg$currPos;\n    s1 = peg$parsedigitSequence();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f12(s1);\n    }\n    s0 = s1;\n    return s0;\n  }\n  function peg$parsefloatingPointConstant() {\n    var s0, s1, s2;\n    s0 = peg$currPos;\n    s1 = peg$parsefractionalConstant();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseexponent();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f13(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsedigitSequence();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseexponent();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f14(s1, s2);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n    return s0;\n  }\n  function peg$parsefractionalConstant() {\n    var s0, s1, s2, s3;\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsedigitSequence();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s2 = peg$c9;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e10);\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsedigitSequence();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f15(s1, s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsedigitSequence();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s2 = peg$c9;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e10);\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f16(s1);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e9);\n      }\n    }\n    return s0;\n  }\n  function peg$parseexponent() {\n    var s0, s1, s2, s3;\n    s0 = peg$currPos;\n    if (peg$r0.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e11);\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsesign();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parsedigitSequence();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f17(s2, s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    return s0;\n  }\n  function peg$parsesign() {\n    var s0;\n    if (peg$r1.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e12);\n      }\n    }\n    return s0;\n  }\n  function peg$parsedigitSequence() {\n    var s0, s1;\n    s0 = [];\n    s1 = peg$parsedigit();\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parsedigit();\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n    return s0;\n  }\n  function peg$parsedigit() {\n    var s0;\n    if (peg$r2.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e13);\n      }\n    }\n    return s0;\n  }\n  function peg$parsewsp() {\n    var s0;\n    if (peg$r3.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e14);\n      }\n    }\n    return s0;\n  }\n  peg$result = peg$startRuleFunction();\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n    throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1) : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n  }\n}\nexport { peg$SyntaxError as SyntaxError, peg$parse as parse };","map":{"version":3,"names":["peg$subclass","child","parent","C","constructor","prototype","peg$SyntaxError","message","expected","found","location","self","Error","call","Object","setPrototypeOf","name","peg$padEnd","str","targetLength","padString","length","repeat","slice","format","sources","src","k","source","text","split","s","start","offset_s","offset","loc","line","column","e","end","filler","toString","last","hatLen","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","class","escapedParts","parts","map","part","Array","isArray","classEscape","inverted","join","any","other","description","hex","ch","charCodeAt","toUpperCase","replace","describeExpectation","type","describeExpected","descriptions","i","j","sort","describeFound","peg$parse","input","options","undefined","peg$FAILED","peg$source","grammarSource","peg$startRuleFunctions","transformList","peg$parsetransformList","peg$startRuleFunction","peg$c0","peg$c1","peg$c2","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$r0","peg$r1","peg$r2","peg$r3","peg$e0","peg$literalExpectation","peg$e1","peg$e2","peg$e3","peg$e4","peg$e5","peg$e6","peg$e7","peg$e8","peg$e9","peg$otherExpectation","peg$e10","peg$e11","peg$classExpectation","peg$e12","peg$e13","peg$e14","peg$f0","ts","peg$f1","t","concat","peg$f2","a","b","c","d","f","peg$f3","tx","ty","peg$f4","sx","sy","peg$f5","angle","r","cx","cy","peg$f6","peg$f7","peg$f8","parseFloat","peg$f9","parseInt","peg$f10","n","peg$f11","n1","n2","peg$f12","ds","peg$f13","peg$f14","peg$f15","d1","d2","peg$f16","peg$f17","peg$currPos","peg$savedPos","peg$posDetailsCache","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","peg$result","startRule","substring","range","peg$computeLocation","peg$buildStructuredError","error","peg$buildSimpleError","ignoreCase","peg$anyExpectation","peg$endExpectation","peg$computePosDetails","pos","details","p","startPos","endPos","startPosDetails","endPosDetails","res","peg$fail","push","s0","s1","s2","s3","s4","peg$parsewsp","peg$parsetransforms","peg$parsetransform","peg$parsecommaWsp","peg$parsematrix","peg$parsetranslate","peg$parsescale","peg$parserotate","peg$parseskewX","peg$parseskewY","s5","s6","s7","s8","s9","s10","s11","s12","s13","s14","s15","s16","s17","substr","peg$parsenumber","peg$parsecommaWspNumber","peg$parsecommaWspTwoNumbers","peg$parsesign","peg$parsefloatingPointConstant","peg$parseintegerConstant","peg$parsecomma","peg$parsedigitSequence","peg$parsefractionalConstant","peg$parseexponent","test","charAt","peg$parsedigit","SyntaxError","parse"],"sources":["C:/Users/karkr/Documents/classes/dev10/dev10-capstone/dev10-capstone-test/frontend/node_modules/transformation-matrix/src/fromTransformAttribute.autogenerated.js"],"sourcesContent":["// Generated by Peggy 3.0.0.\r\n//\r\n// https://peggyjs.org/\r\n\r\nfunction peg$subclass(child, parent) {\r\n  function C() { this.constructor = child; }\r\n  C.prototype = parent.prototype;\r\n  child.prototype = new C();\r\n}\r\n\r\nfunction peg$SyntaxError(message, expected, found, location) {\r\n  var self = Error.call(this, message);\r\n  // istanbul ignore next Check is a necessary evil to support older environments\r\n  if (Object.setPrototypeOf) {\r\n    Object.setPrototypeOf(self, peg$SyntaxError.prototype);\r\n  }\r\n  self.expected = expected;\r\n  self.found = found;\r\n  self.location = location;\r\n  self.name = \"SyntaxError\";\r\n  return self;\r\n}\r\n\r\npeg$subclass(peg$SyntaxError, Error);\r\n\r\nfunction peg$padEnd(str, targetLength, padString) {\r\n  padString = padString || \" \";\r\n  if (str.length > targetLength) { return str; }\r\n  targetLength -= str.length;\r\n  padString += padString.repeat(targetLength);\r\n  return str + padString.slice(0, targetLength);\r\n}\r\n\r\npeg$SyntaxError.prototype.format = function(sources) {\r\n  var str = \"Error: \" + this.message;\r\n  if (this.location) {\r\n    var src = null;\r\n    var k;\r\n    for (k = 0; k < sources.length; k++) {\r\n      if (sources[k].source === this.location.source) {\r\n        src = sources[k].text.split(/\\r\\n|\\n|\\r/g);\r\n        break;\r\n      }\r\n    }\r\n    var s = this.location.start;\r\n    var offset_s = (this.location.source && (typeof this.location.source.offset === \"function\"))\r\n      ? this.location.source.offset(s)\r\n      : s;\r\n    var loc = this.location.source + \":\" + offset_s.line + \":\" + offset_s.column;\r\n    if (src) {\r\n      var e = this.location.end;\r\n      var filler = peg$padEnd(\"\", offset_s.line.toString().length, ' ');\r\n      var line = src[s.line - 1];\r\n      var last = s.line === e.line ? e.column : line.length + 1;\r\n      var hatLen = (last - s.column) || 1;\r\n      str += \"\\n --> \" + loc + \"\\n\"\r\n          + filler + \" |\\n\"\r\n          + offset_s.line + \" | \" + line + \"\\n\"\r\n          + filler + \" | \" + peg$padEnd(\"\", s.column - 1, ' ')\r\n          + peg$padEnd(\"\", hatLen, \"^\");\r\n    } else {\r\n      str += \"\\n at \" + loc;\r\n    }\r\n  }\r\n  return str;\r\n};\r\n\r\npeg$SyntaxError.buildMessage = function(expected, found) {\r\n  var DESCRIBE_EXPECTATION_FNS = {\r\n    literal: function(expectation) {\r\n      return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\r\n    },\r\n\r\n    class: function(expectation) {\r\n      var escapedParts = expectation.parts.map(function(part) {\r\n        return Array.isArray(part)\r\n          ? classEscape(part[0]) + \"-\" + classEscape(part[1])\r\n          : classEscape(part);\r\n      });\r\n\r\n      return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts.join(\"\") + \"]\";\r\n    },\r\n\r\n    any: function() {\r\n      return \"any character\";\r\n    },\r\n\r\n    end: function() {\r\n      return \"end of input\";\r\n    },\r\n\r\n    other: function(expectation) {\r\n      return expectation.description;\r\n    }\r\n  };\r\n\r\n  function hex(ch) {\r\n    return ch.charCodeAt(0).toString(16).toUpperCase();\r\n  }\r\n\r\n  function literalEscape(s) {\r\n    return s\r\n      .replace(/\\\\/g, \"\\\\\\\\\")\r\n      .replace(/\"/g,  \"\\\\\\\"\")\r\n      .replace(/\\0/g, \"\\\\0\")\r\n      .replace(/\\t/g, \"\\\\t\")\r\n      .replace(/\\n/g, \"\\\\n\")\r\n      .replace(/\\r/g, \"\\\\r\")\r\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\r\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\r\n  }\r\n\r\n  function classEscape(s) {\r\n    return s\r\n      .replace(/\\\\/g, \"\\\\\\\\\")\r\n      .replace(/\\]/g, \"\\\\]\")\r\n      .replace(/\\^/g, \"\\\\^\")\r\n      .replace(/-/g,  \"\\\\-\")\r\n      .replace(/\\0/g, \"\\\\0\")\r\n      .replace(/\\t/g, \"\\\\t\")\r\n      .replace(/\\n/g, \"\\\\n\")\r\n      .replace(/\\r/g, \"\\\\r\")\r\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\r\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\r\n  }\r\n\r\n  function describeExpectation(expectation) {\r\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\r\n  }\r\n\r\n  function describeExpected(expected) {\r\n    var descriptions = expected.map(describeExpectation);\r\n    var i, j;\r\n\r\n    descriptions.sort();\r\n\r\n    if (descriptions.length > 0) {\r\n      for (i = 1, j = 1; i < descriptions.length; i++) {\r\n        if (descriptions[i - 1] !== descriptions[i]) {\r\n          descriptions[j] = descriptions[i];\r\n          j++;\r\n        }\r\n      }\r\n      descriptions.length = j;\r\n    }\r\n\r\n    switch (descriptions.length) {\r\n      case 1:\r\n        return descriptions[0];\r\n\r\n      case 2:\r\n        return descriptions[0] + \" or \" + descriptions[1];\r\n\r\n      default:\r\n        return descriptions.slice(0, -1).join(\", \")\r\n          + \", or \"\r\n          + descriptions[descriptions.length - 1];\r\n    }\r\n  }\r\n\r\n  function describeFound(found) {\r\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\r\n  }\r\n\r\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\r\n};\r\n\r\nfunction peg$parse(input, options) {\r\n  options = options !== undefined ? options : {};\r\n\r\n  var peg$FAILED = {};\r\n  var peg$source = options.grammarSource;\r\n\r\n  var peg$startRuleFunctions = { transformList: peg$parsetransformList };\r\n  var peg$startRuleFunction = peg$parsetransformList;\r\n\r\n  var peg$c0 = \"matrix\";\r\n  var peg$c1 = \"(\";\r\n  var peg$c2 = \")\";\r\n  var peg$c3 = \"translate\";\r\n  var peg$c4 = \"scale\";\r\n  var peg$c5 = \"rotate\";\r\n  var peg$c6 = \"skewX\";\r\n  var peg$c7 = \"skewY\";\r\n  var peg$c8 = \",\";\r\n  var peg$c9 = \".\";\r\n\r\n  var peg$r0 = /^[eE]/;\r\n  var peg$r1 = /^[+\\-]/;\r\n  var peg$r2 = /^[0-9]/;\r\n  var peg$r3 = /^[ \\t\\r\\n]/;\r\n\r\n  var peg$e0 = peg$literalExpectation(\"matrix\", false);\r\n  var peg$e1 = peg$literalExpectation(\"(\", false);\r\n  var peg$e2 = peg$literalExpectation(\")\", false);\r\n  var peg$e3 = peg$literalExpectation(\"translate\", false);\r\n  var peg$e4 = peg$literalExpectation(\"scale\", false);\r\n  var peg$e5 = peg$literalExpectation(\"rotate\", false);\r\n  var peg$e6 = peg$literalExpectation(\"skewX\", false);\r\n  var peg$e7 = peg$literalExpectation(\"skewY\", false);\r\n  var peg$e8 = peg$literalExpectation(\",\", false);\r\n  var peg$e9 = peg$otherExpectation(\"fractionalConstant\");\r\n  var peg$e10 = peg$literalExpectation(\".\", false);\r\n  var peg$e11 = peg$classExpectation([\"e\", \"E\"], false, false);\r\n  var peg$e12 = peg$classExpectation([\"+\", \"-\"], false, false);\r\n  var peg$e13 = peg$classExpectation([[\"0\", \"9\"]], false, false);\r\n  var peg$e14 = peg$classExpectation([\" \", \"\\t\", \"\\r\", \"\\n\"], false, false);\r\n\r\n  var peg$f0 = function(ts) { return ts; };\r\n  var peg$f1 = function(t, ts) { return t.concat(ts) };\r\n  var peg$f2 = function(a, b, c, d, e, f) {\r\n      return [{type: 'matrix', a: a, b: b, c: c, d: d, e: e, f: f}];\r\n    };\r\n  var peg$f3 = function(tx, ty) {\r\n      var t = {type: 'translate', tx: tx};\r\n      if (ty) t.ty = ty;\r\n      return [t];\r\n    };\r\n  var peg$f4 = function(sx, sy) {\r\n      var s = {type:'scale', sx: sx};\r\n      if (sy) s.sy = sy;\r\n      return [s];\r\n    };\r\n  var peg$f5 = function(angle, c) {\r\n      var r = {type:'rotate', angle: angle};\r\n      if (c) {\r\n        r.cx = c[0];\r\n        r.cy = c[1];\r\n      }\r\n      return [r];\r\n    };\r\n  var peg$f6 = function(angle) {\r\n      return [{type: 'skewX', angle: angle}];\r\n    };\r\n  var peg$f7 = function(angle) {\r\n      return [{type: 'skewY', angle: angle}];\r\n    };\r\n  var peg$f8 = function(f) { return parseFloat(f.join(\"\")); };\r\n  var peg$f9 = function(i) { return parseInt(i.join(\"\")); };\r\n  var peg$f10 = function(n) { return n; };\r\n  var peg$f11 = function(n1, n2) { return [n1, n2]; };\r\n  var peg$f12 = function(ds) { return ds.join(\"\"); };\r\n  var peg$f13 = function(f, e) { return [f, e || null].join(\"\")};\r\n  var peg$f14 = function(d, e) { return [d, e].join(\"\")};\r\n  var peg$f15 = function(d1, d2) { return [d1 ? d1.join(\"\") : null, \".\", d2.join(\"\")].join(\"\"); };\r\n  var peg$f16 = function(d) { return d.join(\"\"); };\r\n  var peg$f17 = function(s, d) { return ['e', s, d.join(\"\")].join(\"\") };\r\n  var peg$currPos = 0;\r\n  var peg$savedPos = 0;\r\n  var peg$posDetailsCache = [{ line: 1, column: 1 }];\r\n  var peg$maxFailPos = 0;\r\n  var peg$maxFailExpected = [];\r\n  var peg$silentFails = 0;\r\n\r\n  var peg$result;\r\n\r\n  if (\"startRule\" in options) {\r\n    if (!(options.startRule in peg$startRuleFunctions)) {\r\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\r\n    }\r\n\r\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\r\n  }\r\n\r\n  function text() {\r\n    return input.substring(peg$savedPos, peg$currPos);\r\n  }\r\n\r\n  function offset() {\r\n    return peg$savedPos;\r\n  }\r\n\r\n  function range() {\r\n    return {\r\n      source: peg$source,\r\n      start: peg$savedPos,\r\n      end: peg$currPos\r\n    };\r\n  }\r\n\r\n  function location() {\r\n    return peg$computeLocation(peg$savedPos, peg$currPos);\r\n  }\r\n\r\n  function expected(description, location) {\r\n    location = location !== undefined\r\n      ? location\r\n      : peg$computeLocation(peg$savedPos, peg$currPos);\r\n\r\n    throw peg$buildStructuredError(\r\n      [peg$otherExpectation(description)],\r\n      input.substring(peg$savedPos, peg$currPos),\r\n      location\r\n    );\r\n  }\r\n\r\n  function error(message, location) {\r\n    location = location !== undefined\r\n      ? location\r\n      : peg$computeLocation(peg$savedPos, peg$currPos);\r\n\r\n    throw peg$buildSimpleError(message, location);\r\n  }\r\n\r\n  function peg$literalExpectation(text, ignoreCase) {\r\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\r\n  }\r\n\r\n  function peg$classExpectation(parts, inverted, ignoreCase) {\r\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\r\n  }\r\n\r\n  function peg$anyExpectation() {\r\n    return { type: \"any\" };\r\n  }\r\n\r\n  function peg$endExpectation() {\r\n    return { type: \"end\" };\r\n  }\r\n\r\n  function peg$otherExpectation(description) {\r\n    return { type: \"other\", description: description };\r\n  }\r\n\r\n  function peg$computePosDetails(pos) {\r\n    var details = peg$posDetailsCache[pos];\r\n    var p;\r\n\r\n    if (details) {\r\n      return details;\r\n    } else {\r\n      p = pos - 1;\r\n      while (!peg$posDetailsCache[p]) {\r\n        p--;\r\n      }\r\n\r\n      details = peg$posDetailsCache[p];\r\n      details = {\r\n        line: details.line,\r\n        column: details.column\r\n      };\r\n\r\n      while (p < pos) {\r\n        if (input.charCodeAt(p) === 10) {\r\n          details.line++;\r\n          details.column = 1;\r\n        } else {\r\n          details.column++;\r\n        }\r\n\r\n        p++;\r\n      }\r\n\r\n      peg$posDetailsCache[pos] = details;\r\n\r\n      return details;\r\n    }\r\n  }\r\n\r\n  function peg$computeLocation(startPos, endPos, offset) {\r\n    var startPosDetails = peg$computePosDetails(startPos);\r\n    var endPosDetails = peg$computePosDetails(endPos);\r\n\r\n    var res = {\r\n      source: peg$source,\r\n      start: {\r\n        offset: startPos,\r\n        line: startPosDetails.line,\r\n        column: startPosDetails.column\r\n      },\r\n      end: {\r\n        offset: endPos,\r\n        line: endPosDetails.line,\r\n        column: endPosDetails.column\r\n      }\r\n    };\r\n    if (offset && peg$source && (typeof peg$source.offset === \"function\")) {\r\n      res.start = peg$source.offset(res.start);\r\n      res.end = peg$source.offset(res.end);\r\n    }\r\n    return res;\r\n  }\r\n\r\n  function peg$fail(expected) {\r\n    if (peg$currPos < peg$maxFailPos) { return; }\r\n\r\n    if (peg$currPos > peg$maxFailPos) {\r\n      peg$maxFailPos = peg$currPos;\r\n      peg$maxFailExpected = [];\r\n    }\r\n\r\n    peg$maxFailExpected.push(expected);\r\n  }\r\n\r\n  function peg$buildSimpleError(message, location) {\r\n    return new peg$SyntaxError(message, null, null, location);\r\n  }\r\n\r\n  function peg$buildStructuredError(expected, found, location) {\r\n    return new peg$SyntaxError(\r\n      peg$SyntaxError.buildMessage(expected, found),\r\n      expected,\r\n      found,\r\n      location\r\n    );\r\n  }\r\n\r\n  function peg$parsetransformList() {\r\n    var s0, s1, s2, s3, s4;\r\n\r\n    s0 = peg$currPos;\r\n    s1 = [];\r\n    s2 = peg$parsewsp();\r\n    while (s2 !== peg$FAILED) {\r\n      s1.push(s2);\r\n      s2 = peg$parsewsp();\r\n    }\r\n    s2 = peg$parsetransforms();\r\n    if (s2 === peg$FAILED) {\r\n      s2 = null;\r\n    }\r\n    s3 = [];\r\n    s4 = peg$parsewsp();\r\n    while (s4 !== peg$FAILED) {\r\n      s3.push(s4);\r\n      s4 = peg$parsewsp();\r\n    }\r\n    peg$savedPos = s0;\r\n    s0 = peg$f0(s2);\r\n\r\n    return s0;\r\n  }\r\n\r\n  function peg$parsetransforms() {\r\n    var s0, s1, s2, s3;\r\n\r\n    s0 = peg$currPos;\r\n    s1 = peg$parsetransform();\r\n    if (s1 !== peg$FAILED) {\r\n      s2 = [];\r\n      s3 = peg$parsecommaWsp();\r\n      if (s3 !== peg$FAILED) {\r\n        while (s3 !== peg$FAILED) {\r\n          s2.push(s3);\r\n          s3 = peg$parsecommaWsp();\r\n        }\r\n      } else {\r\n        s2 = peg$FAILED;\r\n      }\r\n      if (s2 !== peg$FAILED) {\r\n        s3 = peg$parsetransforms();\r\n        if (s3 !== peg$FAILED) {\r\n          peg$savedPos = s0;\r\n          s0 = peg$f1(s1, s3);\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n    } else {\r\n      peg$currPos = s0;\r\n      s0 = peg$FAILED;\r\n    }\r\n    if (s0 === peg$FAILED) {\r\n      s0 = peg$parsetransform();\r\n    }\r\n\r\n    return s0;\r\n  }\r\n\r\n  function peg$parsetransform() {\r\n    var s0;\r\n\r\n    s0 = peg$parsematrix();\r\n    if (s0 === peg$FAILED) {\r\n      s0 = peg$parsetranslate();\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$parsescale();\r\n        if (s0 === peg$FAILED) {\r\n          s0 = peg$parserotate();\r\n          if (s0 === peg$FAILED) {\r\n            s0 = peg$parseskewX();\r\n            if (s0 === peg$FAILED) {\r\n              s0 = peg$parseskewY();\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return s0;\r\n  }\r\n\r\n  function peg$parsematrix() {\r\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17;\r\n\r\n    s0 = peg$currPos;\r\n    if (input.substr(peg$currPos, 6) === peg$c0) {\r\n      s1 = peg$c0;\r\n      peg$currPos += 6;\r\n    } else {\r\n      s1 = peg$FAILED;\r\n      if (peg$silentFails === 0) { peg$fail(peg$e0); }\r\n    }\r\n    if (s1 !== peg$FAILED) {\r\n      s2 = [];\r\n      s3 = peg$parsewsp();\r\n      while (s3 !== peg$FAILED) {\r\n        s2.push(s3);\r\n        s3 = peg$parsewsp();\r\n      }\r\n      if (input.charCodeAt(peg$currPos) === 40) {\r\n        s3 = peg$c1;\r\n        peg$currPos++;\r\n      } else {\r\n        s3 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$e1); }\r\n      }\r\n      if (s3 !== peg$FAILED) {\r\n        s4 = [];\r\n        s5 = peg$parsewsp();\r\n        while (s5 !== peg$FAILED) {\r\n          s4.push(s5);\r\n          s5 = peg$parsewsp();\r\n        }\r\n        s5 = peg$parsenumber();\r\n        if (s5 !== peg$FAILED) {\r\n          s6 = peg$parsecommaWsp();\r\n          if (s6 !== peg$FAILED) {\r\n            s7 = peg$parsenumber();\r\n            if (s7 !== peg$FAILED) {\r\n              s8 = peg$parsecommaWsp();\r\n              if (s8 !== peg$FAILED) {\r\n                s9 = peg$parsenumber();\r\n                if (s9 !== peg$FAILED) {\r\n                  s10 = peg$parsecommaWsp();\r\n                  if (s10 !== peg$FAILED) {\r\n                    s11 = peg$parsenumber();\r\n                    if (s11 !== peg$FAILED) {\r\n                      s12 = peg$parsecommaWsp();\r\n                      if (s12 !== peg$FAILED) {\r\n                        s13 = peg$parsenumber();\r\n                        if (s13 !== peg$FAILED) {\r\n                          s14 = peg$parsecommaWsp();\r\n                          if (s14 !== peg$FAILED) {\r\n                            s15 = peg$parsenumber();\r\n                            if (s15 !== peg$FAILED) {\r\n                              s16 = [];\r\n                              s17 = peg$parsewsp();\r\n                              while (s17 !== peg$FAILED) {\r\n                                s16.push(s17);\r\n                                s17 = peg$parsewsp();\r\n                              }\r\n                              if (input.charCodeAt(peg$currPos) === 41) {\r\n                                s17 = peg$c2;\r\n                                peg$currPos++;\r\n                              } else {\r\n                                s17 = peg$FAILED;\r\n                                if (peg$silentFails === 0) { peg$fail(peg$e2); }\r\n                              }\r\n                              if (s17 !== peg$FAILED) {\r\n                                peg$savedPos = s0;\r\n                                s0 = peg$f2(s5, s7, s9, s11, s13, s15);\r\n                              } else {\r\n                                peg$currPos = s0;\r\n                                s0 = peg$FAILED;\r\n                              }\r\n                            } else {\r\n                              peg$currPos = s0;\r\n                              s0 = peg$FAILED;\r\n                            }\r\n                          } else {\r\n                            peg$currPos = s0;\r\n                            s0 = peg$FAILED;\r\n                          }\r\n                        } else {\r\n                          peg$currPos = s0;\r\n                          s0 = peg$FAILED;\r\n                        }\r\n                      } else {\r\n                        peg$currPos = s0;\r\n                        s0 = peg$FAILED;\r\n                      }\r\n                    } else {\r\n                      peg$currPos = s0;\r\n                      s0 = peg$FAILED;\r\n                    }\r\n                  } else {\r\n                    peg$currPos = s0;\r\n                    s0 = peg$FAILED;\r\n                  }\r\n                } else {\r\n                  peg$currPos = s0;\r\n                  s0 = peg$FAILED;\r\n                }\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n    } else {\r\n      peg$currPos = s0;\r\n      s0 = peg$FAILED;\r\n    }\r\n\r\n    return s0;\r\n  }\r\n\r\n  function peg$parsetranslate() {\r\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\r\n\r\n    s0 = peg$currPos;\r\n    if (input.substr(peg$currPos, 9) === peg$c3) {\r\n      s1 = peg$c3;\r\n      peg$currPos += 9;\r\n    } else {\r\n      s1 = peg$FAILED;\r\n      if (peg$silentFails === 0) { peg$fail(peg$e3); }\r\n    }\r\n    if (s1 !== peg$FAILED) {\r\n      s2 = [];\r\n      s3 = peg$parsewsp();\r\n      while (s3 !== peg$FAILED) {\r\n        s2.push(s3);\r\n        s3 = peg$parsewsp();\r\n      }\r\n      if (input.charCodeAt(peg$currPos) === 40) {\r\n        s3 = peg$c1;\r\n        peg$currPos++;\r\n      } else {\r\n        s3 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$e1); }\r\n      }\r\n      if (s3 !== peg$FAILED) {\r\n        s4 = [];\r\n        s5 = peg$parsewsp();\r\n        while (s5 !== peg$FAILED) {\r\n          s4.push(s5);\r\n          s5 = peg$parsewsp();\r\n        }\r\n        s5 = peg$parsenumber();\r\n        if (s5 !== peg$FAILED) {\r\n          s6 = peg$parsecommaWspNumber();\r\n          if (s6 === peg$FAILED) {\r\n            s6 = null;\r\n          }\r\n          s7 = [];\r\n          s8 = peg$parsewsp();\r\n          while (s8 !== peg$FAILED) {\r\n            s7.push(s8);\r\n            s8 = peg$parsewsp();\r\n          }\r\n          if (input.charCodeAt(peg$currPos) === 41) {\r\n            s8 = peg$c2;\r\n            peg$currPos++;\r\n          } else {\r\n            s8 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$e2); }\r\n          }\r\n          if (s8 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s0 = peg$f3(s5, s6);\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n    } else {\r\n      peg$currPos = s0;\r\n      s0 = peg$FAILED;\r\n    }\r\n\r\n    return s0;\r\n  }\r\n\r\n  function peg$parsescale() {\r\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\r\n\r\n    s0 = peg$currPos;\r\n    if (input.substr(peg$currPos, 5) === peg$c4) {\r\n      s1 = peg$c4;\r\n      peg$currPos += 5;\r\n    } else {\r\n      s1 = peg$FAILED;\r\n      if (peg$silentFails === 0) { peg$fail(peg$e4); }\r\n    }\r\n    if (s1 !== peg$FAILED) {\r\n      s2 = [];\r\n      s3 = peg$parsewsp();\r\n      while (s3 !== peg$FAILED) {\r\n        s2.push(s3);\r\n        s3 = peg$parsewsp();\r\n      }\r\n      if (input.charCodeAt(peg$currPos) === 40) {\r\n        s3 = peg$c1;\r\n        peg$currPos++;\r\n      } else {\r\n        s3 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$e1); }\r\n      }\r\n      if (s3 !== peg$FAILED) {\r\n        s4 = [];\r\n        s5 = peg$parsewsp();\r\n        while (s5 !== peg$FAILED) {\r\n          s4.push(s5);\r\n          s5 = peg$parsewsp();\r\n        }\r\n        s5 = peg$parsenumber();\r\n        if (s5 !== peg$FAILED) {\r\n          s6 = peg$parsecommaWspNumber();\r\n          if (s6 === peg$FAILED) {\r\n            s6 = null;\r\n          }\r\n          s7 = [];\r\n          s8 = peg$parsewsp();\r\n          while (s8 !== peg$FAILED) {\r\n            s7.push(s8);\r\n            s8 = peg$parsewsp();\r\n          }\r\n          if (input.charCodeAt(peg$currPos) === 41) {\r\n            s8 = peg$c2;\r\n            peg$currPos++;\r\n          } else {\r\n            s8 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$e2); }\r\n          }\r\n          if (s8 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s0 = peg$f4(s5, s6);\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n    } else {\r\n      peg$currPos = s0;\r\n      s0 = peg$FAILED;\r\n    }\r\n\r\n    return s0;\r\n  }\r\n\r\n  function peg$parserotate() {\r\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\r\n\r\n    s0 = peg$currPos;\r\n    if (input.substr(peg$currPos, 6) === peg$c5) {\r\n      s1 = peg$c5;\r\n      peg$currPos += 6;\r\n    } else {\r\n      s1 = peg$FAILED;\r\n      if (peg$silentFails === 0) { peg$fail(peg$e5); }\r\n    }\r\n    if (s1 !== peg$FAILED) {\r\n      s2 = [];\r\n      s3 = peg$parsewsp();\r\n      while (s3 !== peg$FAILED) {\r\n        s2.push(s3);\r\n        s3 = peg$parsewsp();\r\n      }\r\n      if (input.charCodeAt(peg$currPos) === 40) {\r\n        s3 = peg$c1;\r\n        peg$currPos++;\r\n      } else {\r\n        s3 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$e1); }\r\n      }\r\n      if (s3 !== peg$FAILED) {\r\n        s4 = [];\r\n        s5 = peg$parsewsp();\r\n        while (s5 !== peg$FAILED) {\r\n          s4.push(s5);\r\n          s5 = peg$parsewsp();\r\n        }\r\n        s5 = peg$parsenumber();\r\n        if (s5 !== peg$FAILED) {\r\n          s6 = peg$parsecommaWspTwoNumbers();\r\n          if (s6 === peg$FAILED) {\r\n            s6 = null;\r\n          }\r\n          s7 = [];\r\n          s8 = peg$parsewsp();\r\n          while (s8 !== peg$FAILED) {\r\n            s7.push(s8);\r\n            s8 = peg$parsewsp();\r\n          }\r\n          if (input.charCodeAt(peg$currPos) === 41) {\r\n            s8 = peg$c2;\r\n            peg$currPos++;\r\n          } else {\r\n            s8 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$e2); }\r\n          }\r\n          if (s8 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s0 = peg$f5(s5, s6);\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n    } else {\r\n      peg$currPos = s0;\r\n      s0 = peg$FAILED;\r\n    }\r\n\r\n    return s0;\r\n  }\r\n\r\n  function peg$parseskewX() {\r\n    var s0, s1, s2, s3, s4, s5, s6, s7;\r\n\r\n    s0 = peg$currPos;\r\n    if (input.substr(peg$currPos, 5) === peg$c6) {\r\n      s1 = peg$c6;\r\n      peg$currPos += 5;\r\n    } else {\r\n      s1 = peg$FAILED;\r\n      if (peg$silentFails === 0) { peg$fail(peg$e6); }\r\n    }\r\n    if (s1 !== peg$FAILED) {\r\n      s2 = [];\r\n      s3 = peg$parsewsp();\r\n      while (s3 !== peg$FAILED) {\r\n        s2.push(s3);\r\n        s3 = peg$parsewsp();\r\n      }\r\n      if (input.charCodeAt(peg$currPos) === 40) {\r\n        s3 = peg$c1;\r\n        peg$currPos++;\r\n      } else {\r\n        s3 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$e1); }\r\n      }\r\n      if (s3 !== peg$FAILED) {\r\n        s4 = [];\r\n        s5 = peg$parsewsp();\r\n        while (s5 !== peg$FAILED) {\r\n          s4.push(s5);\r\n          s5 = peg$parsewsp();\r\n        }\r\n        s5 = peg$parsenumber();\r\n        if (s5 !== peg$FAILED) {\r\n          s6 = [];\r\n          s7 = peg$parsewsp();\r\n          while (s7 !== peg$FAILED) {\r\n            s6.push(s7);\r\n            s7 = peg$parsewsp();\r\n          }\r\n          if (input.charCodeAt(peg$currPos) === 41) {\r\n            s7 = peg$c2;\r\n            peg$currPos++;\r\n          } else {\r\n            s7 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$e2); }\r\n          }\r\n          if (s7 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s0 = peg$f6(s5);\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n    } else {\r\n      peg$currPos = s0;\r\n      s0 = peg$FAILED;\r\n    }\r\n\r\n    return s0;\r\n  }\r\n\r\n  function peg$parseskewY() {\r\n    var s0, s1, s2, s3, s4, s5, s6, s7;\r\n\r\n    s0 = peg$currPos;\r\n    if (input.substr(peg$currPos, 5) === peg$c7) {\r\n      s1 = peg$c7;\r\n      peg$currPos += 5;\r\n    } else {\r\n      s1 = peg$FAILED;\r\n      if (peg$silentFails === 0) { peg$fail(peg$e7); }\r\n    }\r\n    if (s1 !== peg$FAILED) {\r\n      s2 = [];\r\n      s3 = peg$parsewsp();\r\n      while (s3 !== peg$FAILED) {\r\n        s2.push(s3);\r\n        s3 = peg$parsewsp();\r\n      }\r\n      if (input.charCodeAt(peg$currPos) === 40) {\r\n        s3 = peg$c1;\r\n        peg$currPos++;\r\n      } else {\r\n        s3 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$e1); }\r\n      }\r\n      if (s3 !== peg$FAILED) {\r\n        s4 = [];\r\n        s5 = peg$parsewsp();\r\n        while (s5 !== peg$FAILED) {\r\n          s4.push(s5);\r\n          s5 = peg$parsewsp();\r\n        }\r\n        s5 = peg$parsenumber();\r\n        if (s5 !== peg$FAILED) {\r\n          s6 = [];\r\n          s7 = peg$parsewsp();\r\n          while (s7 !== peg$FAILED) {\r\n            s6.push(s7);\r\n            s7 = peg$parsewsp();\r\n          }\r\n          if (input.charCodeAt(peg$currPos) === 41) {\r\n            s7 = peg$c2;\r\n            peg$currPos++;\r\n          } else {\r\n            s7 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$e2); }\r\n          }\r\n          if (s7 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s0 = peg$f7(s5);\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n    } else {\r\n      peg$currPos = s0;\r\n      s0 = peg$FAILED;\r\n    }\r\n\r\n    return s0;\r\n  }\r\n\r\n  function peg$parsenumber() {\r\n    var s0, s1, s2, s3;\r\n\r\n    s0 = peg$currPos;\r\n    s1 = peg$currPos;\r\n    s2 = peg$parsesign();\r\n    if (s2 === peg$FAILED) {\r\n      s2 = null;\r\n    }\r\n    s3 = peg$parsefloatingPointConstant();\r\n    if (s3 !== peg$FAILED) {\r\n      s2 = [s2, s3];\r\n      s1 = s2;\r\n    } else {\r\n      peg$currPos = s1;\r\n      s1 = peg$FAILED;\r\n    }\r\n    if (s1 !== peg$FAILED) {\r\n      peg$savedPos = s0;\r\n      s1 = peg$f8(s1);\r\n    }\r\n    s0 = s1;\r\n    if (s0 === peg$FAILED) {\r\n      s0 = peg$currPos;\r\n      s1 = peg$currPos;\r\n      s2 = peg$parsesign();\r\n      if (s2 === peg$FAILED) {\r\n        s2 = null;\r\n      }\r\n      s3 = peg$parseintegerConstant();\r\n      if (s3 !== peg$FAILED) {\r\n        s2 = [s2, s3];\r\n        s1 = s2;\r\n      } else {\r\n        peg$currPos = s1;\r\n        s1 = peg$FAILED;\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        peg$savedPos = s0;\r\n        s1 = peg$f9(s1);\r\n      }\r\n      s0 = s1;\r\n    }\r\n\r\n    return s0;\r\n  }\r\n\r\n  function peg$parsecommaWspNumber() {\r\n    var s0, s1, s2;\r\n\r\n    s0 = peg$currPos;\r\n    s1 = peg$parsecommaWsp();\r\n    if (s1 !== peg$FAILED) {\r\n      s2 = peg$parsenumber();\r\n      if (s2 !== peg$FAILED) {\r\n        peg$savedPos = s0;\r\n        s0 = peg$f10(s2);\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n    } else {\r\n      peg$currPos = s0;\r\n      s0 = peg$FAILED;\r\n    }\r\n\r\n    return s0;\r\n  }\r\n\r\n  function peg$parsecommaWspTwoNumbers() {\r\n    var s0, s1, s2, s3, s4;\r\n\r\n    s0 = peg$currPos;\r\n    s1 = peg$parsecommaWsp();\r\n    if (s1 !== peg$FAILED) {\r\n      s2 = peg$parsenumber();\r\n      if (s2 !== peg$FAILED) {\r\n        s3 = peg$parsecommaWsp();\r\n        if (s3 !== peg$FAILED) {\r\n          s4 = peg$parsenumber();\r\n          if (s4 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s0 = peg$f11(s2, s4);\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n    } else {\r\n      peg$currPos = s0;\r\n      s0 = peg$FAILED;\r\n    }\r\n\r\n    return s0;\r\n  }\r\n\r\n  function peg$parsecommaWsp() {\r\n    var s0, s1, s2, s3, s4;\r\n\r\n    s0 = peg$currPos;\r\n    s1 = [];\r\n    s2 = peg$parsewsp();\r\n    if (s2 !== peg$FAILED) {\r\n      while (s2 !== peg$FAILED) {\r\n        s1.push(s2);\r\n        s2 = peg$parsewsp();\r\n      }\r\n    } else {\r\n      s1 = peg$FAILED;\r\n    }\r\n    if (s1 !== peg$FAILED) {\r\n      s2 = peg$parsecomma();\r\n      if (s2 === peg$FAILED) {\r\n        s2 = null;\r\n      }\r\n      s3 = [];\r\n      s4 = peg$parsewsp();\r\n      while (s4 !== peg$FAILED) {\r\n        s3.push(s4);\r\n        s4 = peg$parsewsp();\r\n      }\r\n      s1 = [s1, s2, s3];\r\n      s0 = s1;\r\n    } else {\r\n      peg$currPos = s0;\r\n      s0 = peg$FAILED;\r\n    }\r\n    if (s0 === peg$FAILED) {\r\n      s0 = peg$currPos;\r\n      s1 = peg$parsecomma();\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = [];\r\n        s3 = peg$parsewsp();\r\n        while (s3 !== peg$FAILED) {\r\n          s2.push(s3);\r\n          s3 = peg$parsewsp();\r\n        }\r\n        s1 = [s1, s2];\r\n        s0 = s1;\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n    }\r\n\r\n    return s0;\r\n  }\r\n\r\n  function peg$parsecomma() {\r\n    var s0;\r\n\r\n    if (input.charCodeAt(peg$currPos) === 44) {\r\n      s0 = peg$c8;\r\n      peg$currPos++;\r\n    } else {\r\n      s0 = peg$FAILED;\r\n      if (peg$silentFails === 0) { peg$fail(peg$e8); }\r\n    }\r\n\r\n    return s0;\r\n  }\r\n\r\n  function peg$parseintegerConstant() {\r\n    var s0, s1;\r\n\r\n    s0 = peg$currPos;\r\n    s1 = peg$parsedigitSequence();\r\n    if (s1 !== peg$FAILED) {\r\n      peg$savedPos = s0;\r\n      s1 = peg$f12(s1);\r\n    }\r\n    s0 = s1;\r\n\r\n    return s0;\r\n  }\r\n\r\n  function peg$parsefloatingPointConstant() {\r\n    var s0, s1, s2;\r\n\r\n    s0 = peg$currPos;\r\n    s1 = peg$parsefractionalConstant();\r\n    if (s1 !== peg$FAILED) {\r\n      s2 = peg$parseexponent();\r\n      if (s2 === peg$FAILED) {\r\n        s2 = null;\r\n      }\r\n      peg$savedPos = s0;\r\n      s0 = peg$f13(s1, s2);\r\n    } else {\r\n      peg$currPos = s0;\r\n      s0 = peg$FAILED;\r\n    }\r\n    if (s0 === peg$FAILED) {\r\n      s0 = peg$currPos;\r\n      s1 = peg$parsedigitSequence();\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$parseexponent();\r\n        if (s2 !== peg$FAILED) {\r\n          peg$savedPos = s0;\r\n          s0 = peg$f14(s1, s2);\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n    }\r\n\r\n    return s0;\r\n  }\r\n\r\n  function peg$parsefractionalConstant() {\r\n    var s0, s1, s2, s3;\r\n\r\n    peg$silentFails++;\r\n    s0 = peg$currPos;\r\n    s1 = peg$parsedigitSequence();\r\n    if (s1 === peg$FAILED) {\r\n      s1 = null;\r\n    }\r\n    if (input.charCodeAt(peg$currPos) === 46) {\r\n      s2 = peg$c9;\r\n      peg$currPos++;\r\n    } else {\r\n      s2 = peg$FAILED;\r\n      if (peg$silentFails === 0) { peg$fail(peg$e10); }\r\n    }\r\n    if (s2 !== peg$FAILED) {\r\n      s3 = peg$parsedigitSequence();\r\n      if (s3 !== peg$FAILED) {\r\n        peg$savedPos = s0;\r\n        s0 = peg$f15(s1, s3);\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n    } else {\r\n      peg$currPos = s0;\r\n      s0 = peg$FAILED;\r\n    }\r\n    if (s0 === peg$FAILED) {\r\n      s0 = peg$currPos;\r\n      s1 = peg$parsedigitSequence();\r\n      if (s1 !== peg$FAILED) {\r\n        if (input.charCodeAt(peg$currPos) === 46) {\r\n          s2 = peg$c9;\r\n          peg$currPos++;\r\n        } else {\r\n          s2 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$e10); }\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          peg$savedPos = s0;\r\n          s0 = peg$f16(s1);\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n    }\r\n    peg$silentFails--;\r\n    if (s0 === peg$FAILED) {\r\n      s1 = peg$FAILED;\r\n      if (peg$silentFails === 0) { peg$fail(peg$e9); }\r\n    }\r\n\r\n    return s0;\r\n  }\r\n\r\n  function peg$parseexponent() {\r\n    var s0, s1, s2, s3;\r\n\r\n    s0 = peg$currPos;\r\n    if (peg$r0.test(input.charAt(peg$currPos))) {\r\n      s1 = input.charAt(peg$currPos);\r\n      peg$currPos++;\r\n    } else {\r\n      s1 = peg$FAILED;\r\n      if (peg$silentFails === 0) { peg$fail(peg$e11); }\r\n    }\r\n    if (s1 !== peg$FAILED) {\r\n      s2 = peg$parsesign();\r\n      if (s2 === peg$FAILED) {\r\n        s2 = null;\r\n      }\r\n      s3 = peg$parsedigitSequence();\r\n      if (s3 !== peg$FAILED) {\r\n        peg$savedPos = s0;\r\n        s0 = peg$f17(s2, s3);\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n    } else {\r\n      peg$currPos = s0;\r\n      s0 = peg$FAILED;\r\n    }\r\n\r\n    return s0;\r\n  }\r\n\r\n  function peg$parsesign() {\r\n    var s0;\r\n\r\n    if (peg$r1.test(input.charAt(peg$currPos))) {\r\n      s0 = input.charAt(peg$currPos);\r\n      peg$currPos++;\r\n    } else {\r\n      s0 = peg$FAILED;\r\n      if (peg$silentFails === 0) { peg$fail(peg$e12); }\r\n    }\r\n\r\n    return s0;\r\n  }\r\n\r\n  function peg$parsedigitSequence() {\r\n    var s0, s1;\r\n\r\n    s0 = [];\r\n    s1 = peg$parsedigit();\r\n    if (s1 !== peg$FAILED) {\r\n      while (s1 !== peg$FAILED) {\r\n        s0.push(s1);\r\n        s1 = peg$parsedigit();\r\n      }\r\n    } else {\r\n      s0 = peg$FAILED;\r\n    }\r\n\r\n    return s0;\r\n  }\r\n\r\n  function peg$parsedigit() {\r\n    var s0;\r\n\r\n    if (peg$r2.test(input.charAt(peg$currPos))) {\r\n      s0 = input.charAt(peg$currPos);\r\n      peg$currPos++;\r\n    } else {\r\n      s0 = peg$FAILED;\r\n      if (peg$silentFails === 0) { peg$fail(peg$e13); }\r\n    }\r\n\r\n    return s0;\r\n  }\r\n\r\n  function peg$parsewsp() {\r\n    var s0;\r\n\r\n    if (peg$r3.test(input.charAt(peg$currPos))) {\r\n      s0 = input.charAt(peg$currPos);\r\n      peg$currPos++;\r\n    } else {\r\n      s0 = peg$FAILED;\r\n      if (peg$silentFails === 0) { peg$fail(peg$e14); }\r\n    }\r\n\r\n    return s0;\r\n  }\r\n\r\n  peg$result = peg$startRuleFunction();\r\n\r\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\r\n    return peg$result;\r\n  } else {\r\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\r\n      peg$fail(peg$endExpectation());\r\n    }\r\n\r\n    throw peg$buildStructuredError(\r\n      peg$maxFailExpected,\r\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\r\n      peg$maxFailPos < input.length\r\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\r\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\r\n    );\r\n  }\r\n}\r\n\r\nexport {\r\n  peg$SyntaxError as SyntaxError,\r\n\r\n  peg$parse as parse\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}