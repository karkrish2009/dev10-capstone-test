{"ast":null,"code":"import { isUndefined } from './utils';\nimport { translate } from './translate';\nimport { transform } from './transform';\nconst {\n  cos,\n  sin,\n  PI\n} = Math;\n/**\r\n * Calculate a rotation matrix\r\n * @param angle {number} Angle in radians\r\n * @param [cx] {number} If (cx,cy) are supplied the rotate is about this point\r\n * @param [cy] {number} If (cx,cy) are supplied the rotate is about this point\r\n * @returns {Matrix} Affine Matrix\r\n */\nexport function rotate(angle, cx, cy) {\n  const cosAngle = cos(angle);\n  const sinAngle = sin(angle);\n  const rotationMatrix = {\n    a: cosAngle,\n    c: -sinAngle,\n    e: 0,\n    b: sinAngle,\n    d: cosAngle,\n    f: 0\n  };\n  if (isUndefined(cx) || isUndefined(cy)) {\n    return rotationMatrix;\n  }\n  return transform([translate(cx, cy), rotationMatrix, translate(-cx, -cy)]);\n}\n\n/**\r\n * Calculate a rotation matrix with a DEG angle\r\n * @param angle {number} Angle in degree\r\n * @param [cx] {number} If (cx,cy) are supplied the rotate is about this point\r\n * @param [cy] {number} If (cx,cy) are supplied the rotate is about this point\r\n * @returns {Matrix} Affine Matrix\r\n */\nexport function rotateDEG(angle, cx = undefined, cy = undefined) {\n  return rotate(angle * PI / 180, cx, cy);\n}","map":{"version":3,"names":["isUndefined","translate","transform","cos","sin","PI","Math","rotate","angle","cx","cy","cosAngle","sinAngle","rotationMatrix","a","c","e","b","d","f","rotateDEG","undefined"],"sources":["C:/Users/karkr/Documents/classes/dev10/dev10-capstone/dev10-capstone-test/frontend/node_modules/transformation-matrix/src/rotate.js"],"sourcesContent":["import { isUndefined } from './utils'\r\nimport { translate } from './translate'\r\nimport { transform } from './transform'\r\n\r\nconst { cos, sin, PI } = Math\r\n/**\r\n * Calculate a rotation matrix\r\n * @param angle {number} Angle in radians\r\n * @param [cx] {number} If (cx,cy) are supplied the rotate is about this point\r\n * @param [cy] {number} If (cx,cy) are supplied the rotate is about this point\r\n * @returns {Matrix} Affine Matrix\r\n */\r\nexport function rotate (angle, cx, cy) {\r\n  const cosAngle = cos(angle)\r\n  const sinAngle = sin(angle)\r\n  const rotationMatrix = {\r\n    a: cosAngle,\r\n    c: -sinAngle,\r\n    e: 0,\r\n    b: sinAngle,\r\n    d: cosAngle,\r\n    f: 0\r\n  }\r\n  if (isUndefined(cx) || isUndefined(cy)) {\r\n    return rotationMatrix\r\n  }\r\n\r\n  return transform([\r\n    translate(cx, cy),\r\n    rotationMatrix,\r\n    translate(-cx, -cy)\r\n  ])\r\n}\r\n\r\n/**\r\n * Calculate a rotation matrix with a DEG angle\r\n * @param angle {number} Angle in degree\r\n * @param [cx] {number} If (cx,cy) are supplied the rotate is about this point\r\n * @param [cy] {number} If (cx,cy) are supplied the rotate is about this point\r\n * @returns {Matrix} Affine Matrix\r\n */\r\nexport function rotateDEG (angle, cx = undefined, cy = undefined) {\r\n  return rotate(angle * PI / 180, cx, cy)\r\n}\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,SAAS;AACrC,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,SAAS,QAAQ,aAAa;AAEvC,MAAM;EAAEC,GAAG;EAAEC,GAAG;EAAEC;AAAG,CAAC,GAAGC,IAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,MAAMA,CAAEC,KAAK,EAAEC,EAAE,EAAEC,EAAE,EAAE;EACrC,MAAMC,QAAQ,GAAGR,GAAG,CAACK,KAAK,CAAC;EAC3B,MAAMI,QAAQ,GAAGR,GAAG,CAACI,KAAK,CAAC;EAC3B,MAAMK,cAAc,GAAG;IACrBC,CAAC,EAAEH,QAAQ;IACXI,CAAC,EAAE,CAACH,QAAQ;IACZI,CAAC,EAAE,CAAC;IACJC,CAAC,EAAEL,QAAQ;IACXM,CAAC,EAAEP,QAAQ;IACXQ,CAAC,EAAE;EACL,CAAC;EACD,IAAInB,WAAW,CAACS,EAAE,CAAC,IAAIT,WAAW,CAACU,EAAE,CAAC,EAAE;IACtC,OAAOG,cAAc;EACvB;EAEA,OAAOX,SAAS,CAAC,CACfD,SAAS,CAACQ,EAAE,EAAEC,EAAE,CAAC,EACjBG,cAAc,EACdZ,SAAS,CAAC,CAACQ,EAAE,EAAE,CAACC,EAAE,CAAC,CACpB,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASU,SAASA,CAAEZ,KAAK,EAAEC,EAAE,GAAGY,SAAS,EAAEX,EAAE,GAAGW,SAAS,EAAE;EAChE,OAAOd,MAAM,CAACC,KAAK,GAAGH,EAAE,GAAG,GAAG,EAAEI,EAAE,EAAEC,EAAE,CAAC;AACzC"},"metadata":{},"sourceType":"module","externalDependencies":[]}